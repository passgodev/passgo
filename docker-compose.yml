services:
  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    ports:
      - '${DATABASE_HOST_PORT}:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./database/pg-init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', '${POSTGRES_USER}', '-d', '${POSTGRES_DB}']
      interval: 5s
      retries: 5
      timeout: 3s
    networks:
      - passgo-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    container_name: passgo_app
    env_file:
      - path: '.env'
        required: true
      - path: ${BACKEND_ENV_FILE_PATH}
        required: false
    environment:
      - DB_HOSTNAME=${BACKEND_DATABASE_CONTAINER_HOSTNAME}
      - SPRING_PROFILES_ACTIVE
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '${BACKEND_HOST_PORT}:${BACKEND_CONTAINER_PORT}'
    restart: unless-stopped
    networks:
      - passgo-network

volumes:
  pgdata:

networks:
  passgo-network:
    driver: bridge