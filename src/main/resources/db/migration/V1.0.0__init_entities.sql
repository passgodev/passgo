-- File needed for flyway to mangage tables in db
-- todo: break into smaller sql files

create table address
(
    id              bigint generated by default as identity
        primary key,
    building_number varchar(10)  not null,
    city            varchar(100) not null,
    country         varchar(100) not null,
    postal_code     varchar(20)  not null,
    street          varchar(255) not null
);

alter table address
    owner to "user";

create table administrator
(
    id                bigint generated by default as identity
        primary key,
    birth_date        date         not null,
    email             varchar(255),
    first_name        varchar(255) not null,
    is_active         boolean,
    last_name         varchar(255) not null,
    registration_date timestamp(6) not null
);

alter table administrator
    owner to "user";

create table building
(
    id         bigint generated by default as identity
        primary key,
    name       varchar(255) not null,
    address_id bigint unique references address
);

alter table building
    owner to "user";

create table client
(
    id                bigint generated by default as identity
        primary key,
    birth_date        date         not null,
    email             varchar(255),
    first_name        varchar(255) not null,
    is_active         boolean,
    last_name         varchar(255) not null,
    registration_date timestamp(6) not null,
    wallet_id         bigint unique
);

alter table client
    owner to "user";

create table event
(
    id          bigint generated by default as identity
        primary key,
    category    varchar(100),
    date        timestamp(6) not null,
    description text,
    name        varchar(255) not null,
    building_id bigint references building
);

alter table event
    owner to "user";

create sequence if not exists "faq_id_seq" as bigint start 1 increment 1;

create table faq
(
    id       bigint       not null primary key default nextval('faq_id_seq'),
    add_date date         not null,
    answer   varchar(512) not null,
    question varchar(255) not null
);

alter table faq
    owner to "user";

create table organizer
(
    id                bigint generated by default as identity
        primary key,
    birth_date        date         not null,
    email             varchar(255),
    first_name        varchar(255) not null,
    is_active         boolean,
    last_name         varchar(255) not null,
    registration_date timestamp(6) not null,
    organization      varchar(255)
);

alter table organizer
    owner to "user";

create table sector
(
    id          bigint generated by default as identity
        primary key,
    name        varchar(255) not null unique,
    building_id bigint       not null references building
);

alter table sector
    owner to "user";

create table row_table
(
    id          bigint generated by default as identity
        primary key,
    row_number  bigint not null,
    seats_count bigint not null,
    sector_id   bigint not null references sector
);

alter table row_table
    owner to "user";

create table seat
(
    id       bigint generated by default as identity
        primary key,
    occupied boolean not null,
    row_id   bigint  not null references row_table
);

alter table seat
    owner to "user";

create table ticket
(
    id            bigint generated by default as identity
        primary key,
    price         numeric(38, 2) not null,
    standing_area boolean        not null,
    event_id      bigint references event,
    client_id     bigint unique references client,
    row_id        bigint references row_table,
    seat_id       bigint unique references seat,
    sector_id     bigint references sector
);

alter table ticket
    owner to "user";

create table transaction
(
    id           bigint     not null
        primary key,
    completed_at timestamp(6),
    total_price  numeric(2) not null,
    client_id    bigint     not null references client,
    event_id     bigint     not null references event
);

alter table transaction
    owner to "user";

create table transaction_component
(
    id             bigint not null
        primary key,
    ticket_id      bigint not null unique references ticket,
    transaction_id bigint not null references transaction
);

alter table transaction_component
    owner to "user";

create sequence if not exists "wallet_id_seq" as bigint start 1 increment 1;

create table wallet
(
    id        bigint not null primary key default nextval('wallet_id_seq'),
    money     numeric(38, 2),
    client_id bigint not null unique references client
);

alter table wallet
    owner to "user";

alter table client
    add foreign key (wallet_id) references wallet;

create sequence if not exists "wallet_history_id_seq" as bigint start 1 increment 1;

create table wallet_history
(
    id             bigint         not null primary key default nextval('wallet_history_id_seq'),
    amount         numeric(38, 2) not null,
    description    varchar(128),
    operation_date timestamp(6)   not null,
    wallet_id      bigint         not null references wallet
);

alter table wallet_history
    owner to "user";

-- test

CREATE SEQUENCE IF NOT EXISTS transaction_id_seq AS BIGINT START 1 INCREMENT 1;

CREATE TABLE IF NOT EXISTS transaction
(
    id BIGINT PRIMARY KEY NOT NULL DEFAULT nextval('transaction_id_seq'),
    client_id BIGINT NOT NULL REFERENCES client(id),
    total_price NUMERIC(10,2) NOT NULL,
    completed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    event_id BIGINT NOT NULL REFERENCES event(id)
);

CREATE SEQUENCE IF NOT EXISTS transaction_component_id_seq AS BIGINT START 1 INCREMENT 1;

CREATE TABLE IF NOT EXISTS transaction_component
(
    id BIGINT PRIMARY KEY NOT NULL DEFAULT nextval('transaction_component_id_seq'),
    transaction_id BIGINT NOT NULL REFERENCES transaction(id),
    ticket_id BIGINT NOT NULL REFERENCES ticket(id)
);

